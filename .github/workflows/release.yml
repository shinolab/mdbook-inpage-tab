name: Release

on:
  push:
    tags:
    - 'v*'

jobs:
  create-release:
    name: create-github-release
    runs-on: ubuntu-latest
    steps:
      - id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
      - run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - uses: actions/upload-artifact@v4
        with:
          name: release_url
          path: release_url.txt

  publish-release:
    needs: [create-release]
    name: upload-release-asset-${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            name: win
            arch: x64
          - os: macos-latest
            name: macos
            arch: aarch64
          - os: ubuntu-latest
            name: linux
            arch: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
            toolchain: 'stable'
      - id: get_version
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            return 'mdbook-inpage-tab-'+context.payload.ref.replace(/refs\/tags\//, '')+'-${{ matrix.name }}-${{ matrix.arch }}';
      
      - run: cargo build --release
      - run: Compress-Archive -Path target/release/mdbook-inpage-tab.exe -DestinationPath assets.zip
        if: ${{ matrix.os == 'windows-latest' }}
      - run: |
            cp target/release/mdbook-inpage-tab mdbook-inpage-tab
            tar -zcvf assets.tar.gz mdbook-inpage-tab
        if: ${{ matrix.os != 'windows-latest'}}

      - uses: actions/download-artifact@v4
        with:
          name: release_url
      - id: get_release_info
        uses: juliangruber/read-file-action@v1
        with:
          path: release_url.txt
      - uses: shogo82148/actions-upload-release-asset@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.get_release_info.outputs.content }}
          asset_path: ./assets.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
          asset_name: ${{ steps.get_version.outputs.result }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
          asset_content_type: ${{ matrix.os == 'windows-latest' && 'application/zip' || 'application/octet-stream' }}
